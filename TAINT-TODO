taint C API:

    PyString_FromStringAndSizeT(char *s, int len, PyObject *taint)
    PyString_ExportCheck(PyObject *s, PyObject *outport)
	0 for OK, -1 for exception

Python API:

    s = "abc"
    s.taint(taint_object)
    s.__taint__ returns taint_object

    f = open("/etc/passwd", "r")
    f.set_taint(taint_object)
    f.readline().__taint__ returns taint_object

    s = socket...
    s.set_taint(taint_object)
    s.recv(512).__taint__ returns taint_object

    taint_object methods:
	merge(self, other_taint_object)
	    should return new taint object
	export_check(self, export_object)
	    check if OK to send via export_object (file, socket)
	    return None if ok; throw exception if not

things where it might be worth adding taint:

    propagation
	PyString_Format()
	stringlib/string_format.h
	marshalling
	sock_recv_into, sock_recvfrom_into

    objects
	PyUnicode
	PyBuffer
	PyByteArray

covert channels, likely don't care

    concatenating with an empty string discards the empty string's taint

apps

    eddie's password bug
    sensitive data, diff. classes of data for same user (CC#, SSN, etc)
    convert taint into something else at the edges?

    taint in Ruby?

